<?xml version="1.0" encoding="UTF-8"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- do not display copyright and other IETF-related stuff -->
<?rfc private="(c) GROUP XXXX, 2013" ?>

<rfc category="info" docName="spec-r302-f16-g10" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="Group 10 c2w protocol">Group 10: c2w protocol specification proposal
    </title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    
       <author fullname="RÃ©my Duval" initials="R.D."
            surname="DUVAL">
            
      <organization>Telecom Bretagne</organization>

      <address>
        <postal>
          <street></street>

          <!-- Reorder these if your country does things differently -->

          <city>Brest</city>

          <region></region>

          <code></code>

          <country>France</country>
        </postal>

        

        <email>remy.duval@telecom-bretagne.eu</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>
     <author fullname="Guinther SAIBRO" initials="G.S."
            surname="SAIBRO">
            
      <organization>Telecom Bretagne</organization>

      <address>
        <postal>
          <street></street>

          <!-- Reorder these if your country does things differently -->

          <city>Brest</city>

          <region></region>

          <code></code>

          <country>France</country>
        </postal>

        

        <email>gsaibro@gmail.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>
    <author fullname="Ndzamba Louis" initials="N.L."
            surname="Louis">
            
            <organization>Telecom Bretagne</organization>

      <address>
        <postal>
          <street></street>

          <!-- Reorder these if your country does things differently -->

          <city>Brest</city>

          <region></region>

          <code></code>

          <country>France</country>
        </postal>

        

        <email>louis.ndzamba@telecom-bretagne.eu</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Quoc-Anh TRINH" initials="A.T."
            surname="TRINH">
            
            <organization>Telecom Bretagne</organization>

      <address>
        <postal>
          <street></street>

          <!-- Reorder these if your country does things differently -->

          <city>Brest</city>

          <region></region>

          <code></code>

          <country>France</country>
        </postal>

        

        <email>quoc.trinh@telecom-bretagne.eu</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <date month="November" year="2016" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <keyword>c2w</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>Protocol specification for the c2w (Chat While Watching) protocol. The Chat While Watching application proposes a video streaming service associated with a chatrooms, where users watching the same video stream can chat with each other. The c2w protocol satisfies all of the communication requirement of the application (login, chat services and room management), with the notable exception of the video streaming, wich is satisfied by RTP.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>The Chat While Watching application is a video streaming service associated with chatrooms for each video stream. The client sends a login request to the server using the c2w login format. If the server approves the login it will send an acknowledgment followed by the list of accessible video streams, and the list of currently connected users across multiple frames. The user can then decide to stay in the main chatroom (without video) or switch to a video chatroom using a request with the c2w room entry format. The user can then send chat messages to the server which will then transmit them to all users in the same room using the c2w chat format. At any time the user can quit the video room he is in by sending a c2w room exit request to the server, and when he is in the main room the room exit request disconnects him.</t>

    </section>

    <section title="Packet format">
    <section title="Basic packet format">
    <t>
   The following format is the baseline for all the c2w messages
    </t>

    <t>
    <figure align="center" anchor="sample_pkt">
    <artwork>
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |     Size of the data          |        N      |   DataType    |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                                                               |
    |                                                               |
    |                                                               |
    .                        Message Data                           .
    .                                                               .
    .                                                               .
    |                                                               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        </artwork></figure></t>
    

    <t><list hangIndent="8" style="hanging">
          <t hangText="Size of the data (16 bits)"><vspace blankLines="0" />
          The size of the Message Data field in bytes.</t>

          <t hangText="N (8 bits)"><vspace blankLines="0" />
          The numerotation of the frame sent, used to prevent frame loss by comparing it to the number the recipient is expecting.</t>
         
          <t hangText="DataType (8 bits)"><vspace blankLines="0" />
          This value represents the type of the data transported in Message Data.</t>

          
          <t hangText="Message Data (variable lenght)"><vspace blankLines="0" />
          This field contains the important part of the frame. The length of this field is limited by the Size of the data field, to about 65 000 bytes.</t>
        </list></t>
        </section>
        
        <section title="Content of DataType">
        <t>The content of DataType precise what Message Data will contain, and thus how to interpret it.</t>

        <texttable anchor="DataType" title="The type of frame and the content of DataType">

          <ttcol align="center">Type of frame</ttcol>

          <ttcol align="center">DataType part 1</ttcol>
          
          <ttcol align="center">DataType part 2</ttcol>
          
          <ttcol align="center">Role</ttcol>

          <c>Login request</c><c>1010</c><c>1010</c><c>This frame is sent by the user to create a connection with the server</c>

          <c>Login denial</c><c>1010</c><c>0000</c><c>The server sends it to refuse the connection attempt</c>

          <c>List Video</c><c>0101</c><c>0101</c><c>The server uses it to send the list of video stream available</c>

          <c>Update User</c><c>1001</c><c>1001</c><c>The server uses it to add / remove / update user in the user list of the recipient</c>

          <c>Room entry</c><c>1101</c><c>1101</c><c>The client sends it to start watching the specified video and access its room</c>
          
          <c>Room exit</c><c>0010</c><c>0010</c><c>The client sends it to exit the current room (if he is in the main room he disconnects)</c>
          
          <c>Chat send</c><c>1011</c><c>1011</c><c>The client sends it to send a message to every other user in the room</c>
          
          <c>Chat receive</c><c>0111</c><c>0111</c><c>The server uses it to broadcast a message sent by a user to every other user in the same room</c>
          
          <c>ACK</c><c>1111</c><c>1111</c><c>The universal acknowledgment frame</c>

        </texttable>
      </section>
      
      <section title="Login request">
      <t> This message is sent when the client wants to connect to the server. The server the client wants to connect to is the recipient of the message (the IP address is not included in this protocol, as it is already in the IP layer).</t>

    <t>
    <figure align="center">
    <artwork>
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |     Size of the data          |      N        |   1010 1010   |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |               Port            |                               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +
    .                                                               .
    .                     Login                                     .
    |                                                               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        </artwork></figure></t>
    

    <t><list hangIndent="8" style="hanging">
    
          <t hangText="Port (16 bits)"><vspace blankLines="0" />
          The port of the server the user wants to connect to.</t>
          
          <t hangText="Login (variable length)"><vspace blankLines="0" />
          The login of the user.</t>
        </list></t>
        <t>The server that receive such a message will have two choices, either it accepts the connection by answering with an ACK frame(see DataType table) or it refuses it by anwering with a Login denial frame.</t>
        </section>
        
        <section title="Login denial">
        <t>The server can send this frame to refuse a connection request (if the connection is to be accepted a ACK frame will be sent instead).</t>

    <t>
    <figure align="center">
    <artwork>
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |     Size of the data          |      N        |   1010 0000   |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    .                                                               .
    .                     Error message                             .
    |                                                               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        </artwork></figure></t>
    

    <t><list hangIndent="8" style="hanging">
          <t hangText="Error message (variable length)"><vspace blankLines="0" />
          Explain why the login attempt has been denied by the server.</t>
        </list></t>
        </section>
        <section title="List video">
        <t>This type of frame is used by the server to send the information necessary to connect to a video stream.</t>

    <t>
    <figure align="center">
    <artwork>
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |     Size of the data          |      N        |   0101 0101   |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                       Server  (IP Address)                    |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |               Port            |                               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +
    .                                                               .
    .                     Name of the video                         .
    |                                                               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        </artwork></figure></t>
    

    <t><list hangIndent="8" style="hanging">
          <t hangText="Server (32 bits)"><vspace blankLines="0" />
          The IP address of the video streaming server</t>

          <t hangText="Port (16 bits)"><vspace blankLines="0" />
          The port of the video in the streaming server.</t>
          
          <t hangText="Video (variable length)"><vspace blankLines="0" />
          The name of the video.</t>
        </list></t>
        <t>The frame type is List video, but it does not mean one frame contains the entire list by itself.
        Each frame contains the identification for one video only (if there are X videos to list the server will have to send X frame).
        Note that the client does NOT know how many video there are beforehand, but the acknowledgement system prevent the loss of any video ID.</t>
        </section>
        <section title="Update user">

    <t>
    <figure align="center">
    <artwork>
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |     Size of the data          |      N        |   1001 1001   |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |Update |  0000 |                                               | 
    +-+-+-+-+-+-+-+-+                                               |
    .                                                               .
    .                     Username                                  .
    |                                                               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        </artwork></figure></t>
    

    <t><list hangIndent="8" style="hanging">
          <t hangText="Update (4 bits)"><vspace blankLines="0" />
          Define the type of update on the user in the user list (add it to the list, remove it, change its status).</t>
          <t hangText="Username (variable length)"><vspace blankLines="0" />
          The name of the user.</t>
        </list></t>
        <texttable title="Content of the field Update">

          <ttcol align="center">Type of update</ttcol>

          <ttcol align="center">Update code</ttcol>
          
          <c>Add user (status : in main room)</c><c>1010</c><c>Remove user</c><c>0101</c>
          
          <c>Add user (status : watching a video)</c><c>1110</c><c>Change status</c><c>1111</c>

        </texttable>
        </section>
        <section title="Room entry">

    <t>
    <figure align="center">
    <artwork>
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |     Size of the data          |      N        |   1101 1101   |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                       Server  (IP Address)                    |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |               Port            |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        </artwork></figure></t>
    

    <t><list hangIndent="8" style="hanging">
          <t hangText="Server (32 bits)"><vspace blankLines="0" />
          The IP address of the server streaming the video</t>

          <t hangText="Port (16 bits)"><vspace blankLines="0" />
          The port of the video in the server.</t>
        </list></t>
        </section>
        <section title="Room exit">

    <t>
    <figure align="center">
    <artwork>
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |     Size of the data          |      N        |   0010 0010   |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        </artwork></figure></t>
    
        </section>
        
       <section title="Chat send">

    <t>
    <figure align="center">
    <artwork>
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |     Size of the data          |      N        |   1011 1011   |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                            Time                               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    .                                                               .
    .                     Message content                           .
    |                                                               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        </artwork></figure></t>
    

    <t><list hangIndent="8" style="hanging">
          <t hangText="Time (32 bits)"><vspace blankLines="0" />
          The time when the user sent the message (Unix time).</t>
          
          <t hangText="Message content (variable length)"><vspace blankLines="0" />
          The content of the message the user sent.</t>
        </list></t>
        </section>
        <section title="Chat receive">

    <t>
    <figure align="center">
    <artwork>
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |     Size of the data          |      N        |   0111 0111   |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                            Time                               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |     Size of Username          |                               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               |
    |                            Username                           |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    .                                                               .
    .                     Message content                           .
    |                                                               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        </artwork></figure></t>
    

    <t><list hangIndent="8" style="hanging">
          <t hangText="Time (32 bits)"><vspace blankLines="0" />
          The time when the user sent the message (Unix time).</t>
          
          <t hangText="Size of Username (16 bits)"><vspace blankLines="0" />
          The size of Username field in bytes.</t>
          
          <t hangText="Username (variable length)"><vspace blankLines="0" />
          The username of the sender.</t>
          
          <t hangText="Message content (variable length)"><vspace blankLines="0" />
          The content of the message the user sent.</t>
        </list></t>
        </section>
        
        
        <section title="Acknowledgement system">
        <t>Both ends of the connection shall maintain at all time two memory values, Ns and Nr :
        </t>
        <t><list hangIndent="8" style="hanging">
          <t hangText="Ns (8 bits)"><vspace blankLines="0" />
          The number of non-ACK frame sent until now, and the N of the next frame to be sent.</t>
          
          <t hangText="Nr (8 bits)"><vspace blankLines="0" />
          The number of non-ACK frame received until now, and the N of the next frame to be received.</t>
        </list></t>
        <t>After each successful emission / reception of a non-ACK frame these values will be updated (+1 to Ns after sending a frame, + 1 to Nr after receiving a frame).
        When receiving a frame, its N field will be compared to the Nr value before considering it successful. If the values are not the same the frame shall be ignored.
        Adter sending a frame, if the sender does not receive an ACK with the Number Field equals to Ns in time, the frame will be resent.</t>
        </section>
        
        
        <section title="Acknowledgement frame format">

    <t>
    <figure align="center">
    <artwork>
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |     Size of the data          |      N        |   1111 1111   |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |     AckType   |    Number     |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        </artwork></figure></t>
    

    <t><list hangIndent="8" style="hanging">
          <t hangText="AckType (8 bits)"><vspace blankLines="0" />
          The DataType of the request that is acknowledged.</t>
          
          <t hangText="Number (8 bits)"><vspace blankLines="0" />
          Contains the Nr value.</t>
        </list></t>
        </section>
        
        
        
      </section>


    <section title="Example scenario">
    <t>
    <figure>
    <artwork>




     Alice                                            Server
   Ns:Nr|                                               |Ns:Nr
        |               Login request                   |
        |----------------------------------------------&gt;|
     1:0|    (Ox0005,Ox00,OxAA,Port,Ox416c696365)       |0:1
        |                                               |
        |    "Alice tries to login into the server"     |
        |                                               |
        |                                               |
        |                   ACK                         |
        |&lt;----------------------------------------------|
        |    (Ox0002,Ox00,OxFF,OxAA,Ox01)               |
        |                                               |
        |               List video                      |
        |&lt;----------------------------------------------|
     1:1|   (Ox000F,Ox00,Ox55,IP,Port,0x50616e6461)     |1:1
        |                                               |
        |   "The server sends to Alice the list of      |
        |    available videos with one video ID/frame   |
        |    , here only one frame, for "Panda" "       |
        |                                               |
        |                   ACK                         |
        |----------------------------------------------&gt;|
        |   (Ox0002,Ox01,OxFF,Ox55,Ox01)                |
        |                                               |
        |               Update user                     |
        |&lt;----------------------------------------------|
     1:2|   (Ox0004,Ox01,Ox99,OxA0,Ox426f62)            |2:1
        |                                               |
        | "The server tells Alice another user logs in  |
        |  the main room, his username is Bob"          |
        |                                               |
        |                                               |
        |                   ACK                         |
        |----------------------------------------------&gt;|
        |   (Ox0002,Ox01,OxFF,Ox99,Ox02)                |
        |                                               |
        |                Update user                    |
        |&lt;----------------------------------------------|
     1:3|   (Ox0004,Ox02,Ox99,OxF0,Ox426f62)            |3:1
        |                                               |
        | "The server tells Alice that Bob entered in a |
        |  video room"                                  |           
        |                                               |
        |                                               |
        |                    ACK                        |
        |----------------------------------------------&gt;|
        |   (Ox0002,Ox01,OxFF,Ox99,Ox03)                |
        |                                               |
        |                 Room entry                    |
        |----------------------------------------------&gt;|
     2:3|   (Ox0006,Ox01,OxDD,IP,Port)                  |3:2
        |                                               |
        | "Alice enters in the video room "Panda""      |
        |                                               |
        |                                               |
        |                                               |
        |                    ACK                        |
        |&lt;----------------------------------------------|
        |    (Ox0002,Ox03,OxFF,OxDD,Ox02)               |
        |                                               |
        |                  Update user                  |
        |&lt;----------------------------------------------|
     2:4|    (Ox0004,Ox03,Ox99,OxE0,Ox426f62)           |4:2
        |                                               |
        | "The server tells Alice that Bob is in the    |
        |  same video room"                             |           
        |                                               |
        |                                               |
        |                    ACK                        |
        |----------------------------------------------&gt;|
        |    (Ox0002,Ox02,OxFF,Ox99,Ox04)               |
        |                                               |
        |                                               |
        |                    Chat send                  |
        |----------------------------------------------&gt;|
     3:4|    (0x0006,Ox02,OxBB,Time,Ox4869)             |4:3
        |                                               |
        |"Alice sends a message to everyone in the room"|                                             
        |                                               |
        |                                               |
        |                   ACK                         |
        |&lt;----------------------------------------------|
        |    (Ox0002,Ox04,OxFF,OxBB,Ox03)               |
        |                                               |
        |                 Chat receive                  |
        |&lt;----------------------------------------------|
     3:5|  (Ox000A,Ox04,Ox77,Time,Ox03,Ox426f62,Ox4869) |5:3
        |                                               |
        |"Bob, being in the same room, received Alice's |
        | message and replied with "Hi" too"            |
        |                                               |
        |                                               |
        |                   ACK                         |
        |----------------------------------------------&gt;|
        |    (Ox0002,Ox03,OxFF,Ox77,Ox05)               |
        
    </artwork></figure></t>
    
    </section><!--End of examples-->

    <section title="Conclusion">
        <t>
            This protocol can be used either on top of TCP or UDP, as it implements its own reliability method. It satisfies most of the needs of the application Chat While Watching, with the exception of the video stream, which must be satisfied by RTP.
        </t>
    </section>



    

      

    

      

        

    


  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->


    


    
  </back>
</rfc>

<?xml version="1.0" encoding="UTF-8"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- do not display copyright and other IETF-related stuff -->
<?rfc private="(c) GROUP XXXX, 2013" ?>

<rfc category="info" docName="draft-ietf-xml2rfc-template-05" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="Group 10 c2w protocol">Group 10: c2w protocol specification proposal
    </title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    
       <author fullname="RÃ©my Duval" initials="R.D."
            surname="DUVAL">
            
      <organization>Telecom Bretagne</organization>

      <address>
        <postal>
          <street></street>

          <!-- Reorder these if your country does things differently -->

          <city>Brest</city>

          <region></region>

          <code></code>

          <country>France</country>
        </postal>

        

        <email>remy.duval@telecom-bretagne.eu</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>
     <author fullname="Guinther SAIBRO" initials="G.S."
            surname="SAIBRO">
            
      <organization>Telecom Bretagne</organization>

      <address>
        <postal>
          <street></street>

          <!-- Reorder these if your country does things differently -->

          <city>Brest</city>

          <region></region>

          <code></code>

          <country>France</country>
        </postal>

        

        <email>gsaibro@gmail.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>
    <author fullname="Ndzamba Louis" initials="N.L."
            surname="Louis">
            
            <organization>Telecom Bretagne</organization>

      <address>
        <postal>
          <street></street>

          <!-- Reorder these if your country does things differently -->

          <city>Brest</city>

          <region></region>

          <code></code>

          <country>France</country>
        </postal>

        

        <email>louis.ndzamba@telecom-bretagne.eu</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Quoc-Anh TRINH" initials="A.T."
            surname="TRINH">
            
            <organization>Telecom Bretagne</organization>

      <address>
        <postal>
          <street></street>

          <!-- Reorder these if your country does things differently -->

          <city>Brest</city>

          <region></region>

          <code></code>

          <country>France</country>
        </postal>

        

        <email>quoc.trinh@telecom-bretagne.eu</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <date month="November" year="2016" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <keyword>c2w</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>Protocol specification for the c2w (Chat While Watching) protocol. The Chat While Watching application proposes a video streaming service associated with a chatrooms, where users watching the same video stream can chat with each other. The c2w protocol satisfies all of the communication requirement of the application (login, chat services and room management), with the notable exception of the video streaming, wich is satisfied by RTP.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>The Chat While Watching application is a video streaming service associated with chatrooms for each video stream. The client sends a login request to the server using the c2w login format. If the server approves the login it will send an acknowledgment followed by the list of accessible video streams, and the list of currently connected users across multiple frames. The user can then decide to stay in the main chatroom (without video) or switch to a video chatroom using a request with the c2w roommanagement format. The user can then send chat messages to the server which will then transmit them to all users in the same room using the c2w chat format. At any time the user can quit the room he is in by sending a c2w roommanagement request to the server, and when he is in the main room he can send a disconnect request to the server to quit the application.</t>

    </section>

    <section title="Packet format">
    <section title="Basic packet format">
    <t>
   The following format is the baseline for all the c2w messages
    </t>

    <t>
    <figure align="center" anchor="sample_pkt">
    <artwork>
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |     Size of the data          |   Nc  |   Ns  |   DataType    |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                                                               |
    |                                                               |
    |                                                               |
    .                        Message Data                           .
    .                                                               .
    .                                                               .
    |                                                               |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        </artwork></figure></t>
    

    <t><list hangIndent="8" style="hanging">
          <t hangText="Size of the data (16 bits)"><vspace blankLines="0" />
          The size of the Message Data field in bits.</t>

          <t hangText="Nc (4 bits)"><vspace blankLines="0" />
          The numerotation of the frame that the client has last sent, used to prevent frame loss by comparing this number to the one the server is expecting.</t>
          
          <t hangText="Ns (4 bits)"><vspace blankLines="0" />
          The numerotation of the frame that the server has last sent, used to prevent frame loss by comparing this number to the one the client is expecting.</t>

          <t hangText="DataType (8 bits)"><vspace blankLines="0" />
          This value represents the type of the data transported in Message Data.</t>

          
          <t hangText="Message Data (variable lenght)"><vspace blankLines="0" />
          This field contains the important part of the frame.</t>
        </list></t>
        </section>
        
        <section title="Content of DataType">
        <t>The content of DataType precise what Message Data will contain, and thus how to interpret it.</t>

        <texttable anchor="DataType" title="The type of frame and the content of DataType">

          <ttcol align="center">Type of frame</ttcol>

          <ttcol align="center">DataType#1</ttcol>
          
          <ttcol align="center">DataType#2</ttcol>
          
          <ttcol align="center">Commentary</ttcol>

          <c>Login request</c><c>1010</c><c>1010</c><c>This frame is sent by the user to create a connection with the server</c>

          <c>Login denial</c><c>1010</c><c>0000</c><c>The server sends it to refuse the connection attempt</c>

          <c>List Video</c><c>0101</c><c>0101</c><c>The server uses it to send the list of video stream available</c>

          <c>Update User</c><c>1001</c><c>1001</c><c>The server uses it to add / remove / update user in the user list of the recipient</c>

          <c>Room entry</c><c>1101</c><c>1101</c><c>The client sends it to start watching the specified video and access its room</c>
          
          <c>Room exit</c><c>0010</c><c>0010</c><c>The client sends it to exit the current room (if he is in the main room he disconnects)</c>
          
          <c>Chat send</c><c>1011</c><c>1011</c><c>The client sends it to send a message to every other user in the room</c>
          
          <c>Chat receive</c><c>0111</c><c>0111</c><c>The server uses it to broadcast a message sent by a user to every other user in the same room</c>
          
          <c>ACK</c><c>1111</c><c>1111</c><c>The universal acknowledgment frame</c>

        </texttable>
      </section>
      </section>


    <section title="Example scenario">
    <section title="Scenario 1: title">
    <t>
    <figure>
    <artwork>
MSG 1 from toto to titi

etc

You can also use a figure like this:

     Alice                                            Bob
        |                                               |
        |             Message 1 (Request)               |
        |----------------------------------------------&gt;|
        |            (details of the message)           |
        |                                               |
        |                                               |
        |               Message 2 (Response)            |
        |&lt;----------------------------------------------|
        |                   (Details)                   |
        
    </artwork></figure></t>
    
    </section><!--End of example 1-->
    </section><!--End of examples-->

    <section title="Conclusion">
        <t>
            Your conclusion goes here.
        </t>
    </section>

    <section title="xml2rfc Features">
      <t>In this sample file, the following sections show how to use some of the 
      features of supported by xml2rfc.  This is a non-exhaustive list.  It is up
      to each group to decide which of these features (if any) to use in the
      protocol specification.</t>
      
      <t> This document is a modified version of the Internet-Draft template by 
      Elwyn Davies, available on the IETF 
      <xref target="IDSample"> website</xref>. </t>
    </section>

    <section anchor="simple_list" title="Simple List">
      <t>List styles: 'empty', 'symbols', 'letters', 'numbers', 'hanging',
      'format'.</t>

      <t><list style="symbols">
          <t>First bullet</t>

          <t>Second bullet</t>
        </list> You can write text here as well.</t>
    </section>

    <section title="Figures">
      <t>Figures should not exceed 69 characters wide to allow for the indent
      of sections.</t>

      <figure align="center" anchor="xml_happy">
        <preamble>Preamble text - can be omitted or empty.</preamble>

        <artwork align="left"><![CDATA[
+-----------------------+
| Use XML, be Happy :-) |
|_______________________|
            ]]></artwork>

        <postamble>Cross-references allowed in pre- and postamble. <xref
        target="min_ref" />.</postamble>
      </figure>

      <t>The CDATA means you don't need to escape meta-characters (especially
      &lt;(&amp;lt;) and &amp;(&amp;amp;)) but is not essential.
      Figures may also have a title attribute but it won't be displayed unless
      there is also an anchor. White space, both horizontal and vertical, is
      significant in figures even if you don't use CDATA.</t>
    </section>

    <!-- This PI places the pagebreak correctly (before the section title) in the text output. -->

    <?rfc needLines="8" ?>

    <section title="Subsections and Tables">
      <section title="A Subsection">
        <t>By default 3 levels of nesting show in table of contents but that
        can be adjusted with the value of the "tocdepth" processing
        instruction.</t>
      </section>

      <section title="Tables">
        <t>.. are very similar to figures:</t>

        <texttable anchor="table_example" title="A Very Simple Table">
          <preamble>Tables use ttcol to define column headers and widths.
          Every cell then has a "c" element for its content.</preamble>

          <ttcol align="center">ttcol #1</ttcol>

          <ttcol align="center">ttcol #2</ttcol>

          <c>c #1</c>

          <c>c #2</c>

          <c>c #3</c>

          <c>c #4</c>

          <c>c #5</c>

          <c>c #6</c>

          <postamble>which is a very simple example.</postamble>
        </texttable>
      </section>
    </section>

    <section anchor="nested_lists" title="More about Lists">
      <t>Lists with 'hanging labels': the list item is indented the amount of
      the hangIndent: <list hangIndent="8" style="hanging">
          <t hangText="short">With a label shorter than the hangIndent.</t>

          <t hangText="fantastically long label">With a label longer than the
          hangIndent.</t>

          <t hangText="vspace_trick"><vspace blankLines="0" />Forces the new
          item to start on a new line.</t>
        </list></t>

      <!-- It would be nice to see the next piece (12 lines) all on one page. -->

      <?rfc needLines="12" ?>

      <t>Simulating more than one paragraph in a list item using
      &lt;vspace&gt;: <list style="letters">
          <t>First, a short item.</t>

          <t>Second, a longer list item.<vspace blankLines="1" /> And
          something that looks like a separate pararaph..</t>
        </list></t>

      <t>Simple indented paragraph using the "empty" style: <list
          hangIndent="10" style="empty">
          <t>The quick, brown fox jumped over the lazy dog and lived to fool
          many another hunter in the great wood in the west.</t>
        </list></t>

      <section title="Numbering Lists across Lists and Sections">
        <t>Numbering items continuously although they are in separate
        &lt;list&gt; elements, maybe in separate sections using the "format"
        style and a "counter" variable.</t>

        <t>First list: <list counter="reqs" hangIndent="4" style="format R%d">
            <t>#1</t>

            <t>#2</t>

            <t>#3</t>
          </list> Specify the indent explicitly so that all the items line up
        nicely.</t>

        <t>Second list: <list counter="reqs" hangIndent="4" style="format R%d">
            <t>#4</t>

            <t>#5</t>

            <t>#6</t>
          </list></t>
      </section>

      <section title="Where the List Numbering Continues">
        <t>List continues here.</t>

        <t>Third list: <list counter="reqs" hangIndent="4" style="format R%d">
            <t>#7</t>

            <t>#8</t>

            <t>#9</t>

            <t>#10</t>
          </list> The end of the list.</t>
      </section>
    </section>

    <section anchor="codeExample"
             title="Example of Code or MIB Module To Be Extracted">
      <figure>
        <preamble>The &lt;artwork&gt; element has a number of extra attributes
        that can be used to substitute a more aesthetically pleasing rendition
        into HTML output while continuing to use the ASCII art version in the
        text and nroff outputs (see the xml2rfc README for details). It also
        has a "type" attribute. This is currently ignored except in the case
        'type="abnf"'. In this case the "artwork" is expected to contain a
        piece of valid Augmented Backus-Naur Format (ABNF) grammar. This will
        be syntax checked by xml2rfc and any errors will cause a fatal error
        if the "strict" processing instruction is set to "yes". The ABNF will
        also be colorized in HTML output to highlight the syntactic
        components. Checking of additional "types" may be provided in future
        versions of xml2rfc.</preamble>

        <artwork><![CDATA[

/**** an example C program */

#include <stdio.h>

void
main(int argc, char *argv[])
{
    int i;

    printf("program arguments are:\n");
    for (i = 0; i < argc; i++) {
        printf("%d: \"%s\"\n", i, argv[i]);
    }

    exit(0);
} /* main */

/* end of file */

            ]]></artwork>
      </figure>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>This template was derived from an initial version written by Pekka
      Savola and contributed by him to the xml2rfc project.</t>

      <t>This document is part of a plan to make xml2rfc indispensable <xref
      target="DOMINATION"></xref>.</t>
    </section>

  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->


      <reference anchor="min_ref">
        <!-- the following is the minimum to make xml2rfc happy -->

        <front>
          <title>Minimal Reference</title>

          <author initials="authInitials" surname="authSurName">
            <organization></organization>
          </author>

          <date year="2006" />
        </front>
      </reference>
    </references>

    <references title="Informative References">
      <!-- Here we use entities that we defined at the beginning. -->
      <!-- A reference written by by an organization not a person. -->

      <reference anchor="DOMINATION"
                 target="http://www.example.com/dominator.html">
        <front>
          <title>Ultimate Plan for Taking Over the World</title>

          <author>
            <organization>Mad Dominators, Inc.</organization>
          </author>

          <date year="1984" />
        </front>
      </reference>
      
      <reference anchor="IDSample"
       target="http://tools.ietf.org/tools/templates/draft-davies-template-bare.txt">
        

        <front>
          <title>Internet Draft Sample</title>

          <author initials="E. D." surname="Davies">
            <organization></organization>
          </author>

          <date year="2006" />
        </front>
      </reference>
    </references>
    

    <section anchor="app-additional" title="Additional Stuff">
      <t>This becomes an Appendix.</t>
    </section>

    <!-- Change Log

v00 2006-03-15  EBD   Initial version

v01 2006-04-03  EBD   Moved PI location back to position 1 -
                      v3.1 of XMLmind is better with them at this location.
v02 2007-03-07  AH    removed extraneous nested_list attribute,
                      other minor corrections
v03 2007-03-09  EBD   Added comments on null IANA sections and fixed heading capitalization.
                      Modified comments around figure to reflect non-implementation of
                      figure indent control.  Put in reference using anchor="DOMINATION".
                      Fixed up the date specification comments to reflect current truth.
v04 2007-03-09 AH     Major changes: shortened discussion of PIs,
                      added discussion of rfc include.
v05 2007-03-10 EBD    Added preamble to C program example to tell about ABNF and alternative 
                      images. Removed meta-characters from comments (causes problems).  -->
  </back>
</rfc>
